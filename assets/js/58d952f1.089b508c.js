"use strict";(self.webpackChunkrio_docs=self.webpackChunkrio_docs||[]).push([[4368],{6189:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var t=n(5893),r=n(1151);const i={title:"keyboard",language:"en"},s=void 0,l={id:"config/keyboard",title:"keyboard",description:"- use-kitty-keyboard-protocol - Enable Kitty Keyboard protocol",source:"@site/docs/config/keyboard.md",sourceDirName:"config",slug:"/config/keyboard",permalink:"/rio/docs/config/keyboard",draft:!1,unlisted:!1,editUrl:"https://github.com/raphamorim/rio/tree/main/docs/docs/config/keyboard.md",tags:[],version:"current",frontMatter:{title:"keyboard",language:"en"},sidebar:"tutorialSidebar",previous:{title:"ignore-selection-foreground-color",permalink:"/rio/docs/config/ignore-selection-foreground-color"},next:{title:"log-level",permalink:"/rio/docs/config/log-level"}},c={},a=[];function d(e){const o={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:["\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"use-kitty-keyboard-protocol"})," - Enable Kitty Keyboard protocol"]}),"\n"]}),"\n",(0,t.jsxs)(o.li,{children:["\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"disable-ctlseqs-alt"})," - Disable ctlseqs with ALT keys"]}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:"Useful for example if you would like Rio to replicate Terminal.app, since it does not deal with ctlseqs with ALT keys"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:"Example:"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-toml",children:"[keyboard]\nuse-kitty-keyboard-protocol = false\ndisable-ctlseqs-alt = false\n"})})]})}function u(e={}){const{wrapper:o}={...(0,r.a)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,o,n)=>{n.d(o,{Z:()=>l,a:()=>s});var t=n(7294);const r={},i=t.createContext(r);function s(e){const o=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:o},e.children)}}}]);